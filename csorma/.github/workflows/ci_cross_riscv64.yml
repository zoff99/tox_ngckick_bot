name: riscv64 build

on:
  push:
  pull_request:

jobs:

  build-riscv64:
    name: riscv64 Build
    runs-on: ubuntu-22.04
    if: |
      true
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: java-version
        run: java -version

      - name: generate code
        run: |
          javac csorma_generator.java && java csorma_generator ./project/

      - name: install deps
        run: |
          sudo apt-get update && \
          sudo DEBIAN_FRONTEND=noninteractive \
          apt-get install -y --no-install-recommends \
          ca-certificates qemu-system-riscv64 qemu-user-static \
          qemu-utils binfmt-support libc6-riscv64-cross libatomic1-riscv64-cross

      - name: enable riscv64 emu
        run: |
          sudo modprobe binfmt_misc || echo "NO ERR"
          sudo update-binfmts --enable || echo "NO ERR"

      - name: check binfmt_misc
        run: |
          lsmod | grep binfmt_misc || echo "NO ERR"
          ls -al /proc/sys/fs/binfmt_misc/ || echo "NO ERR"

      - name: make script dockcross/linux-riscv64
        run: docker run --rm dockcross/linux-riscv64 > ./dockcross-linux-riscv64; chmod +x ./dockcross-linux-riscv64

      - name: test
        run: ./dockcross-linux-riscv64 bash -c 'ls -al;id;pwd;hostname;uname -a'

      - name: build deps
        run: |
          ./dockcross-linux-riscv64 bash -c 'cd project/gen/;ls -al;make -j 6 all && make tests;ldd csorma_example||echo "NO ERR";ls -hal csorma_example;./csorma_example'

